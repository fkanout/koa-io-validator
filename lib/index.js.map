{"version":3,"sources":["../src/index.js"],"names":["alternativeValidation","alternate","schema","values","config","errorMsg","_original","details","v","handleErrorWithSource","Joi","alternatives","try","validateAsync","allowUnknown","denyUnknown","includes","err","message","error","Error","trim","name","source","fn","context","inputs","query","params","body","headers","undefined","Object","prototype","toString","call","Array","isArray","isSchema","_config","httpErrorCode","nextOnError","ctx","next","alternateSchema","alternateData","request","object","unknown","headersLowered","keys","reduce","destination","key","toLowerCase","length","status","state","routeValidationError","throw"],"mappings":"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","sourcesContent":["import Joi from \"@hapi/joi\";\nexport { default as Joi } from \"@hapi/joi\";\n\nconst alternativeValidation = async (alternate, schema, values, config) => {\n  let errorMsg = \"\";\n  let _original = {};\n  let details = [];\n\n  for (const v in values) {\n    try {\n      await handleErrorWithSource(\n        alternate,\n        Joi.alternatives()\n          .try({\n            ...schema\n          })\n          .validateAsync(values[v], {\n            allowUnknown: !config.denyUnknown.includes(v)\n          })\n      );\n      return; // returning after first validation succeed\n    } catch (err) {\n      errorMsg += `${err.message}; `;\n      _original[v] = err._original[v];\n      details = [...details, ...err.details];\n    }\n  }\n\n  const error = new Error(errorMsg.trim());\n  error.name = \"ValidationError\";\n  error.source = alternate;\n  error.details = details;\n  error._original = _original;\n\n  throw error;\n};\n\nconst handleErrorWithSource = async (source, fn) => {\n  try {\n    await fn;\n  } catch (error) {\n    if (source === \"schema\") {\n      error.message =\n        error.details[0].context.message || error.details[0].message;\n    }\n    error.source = source;\n    throw error;\n  }\n};\nexport default inputs => {\n  const { query, params, body, headers, schema, config } = inputs;\n\n  if (\n    config !== undefined &&\n    Object.prototype.toString.call(config) !== \"[object Object]\"\n  ) {\n    throw { message: `Route config, expecting config to be an Object` };\n  }\n\n  if (config && config.alternate && !Array.isArray(config.alternate)) {\n    throw { message: `Config's alternate option should be an array` };\n  }\n\n  if (config && config.denyUnknown && !Array.isArray(config.denyUnknown)) {\n    throw { message: `Config's denyUnknown option should be an array` };\n  }\n\n  if (schema && !Joi.isSchema(schema)) {\n    throw { message: `Schema should be a Joi object` };\n  }\n\n  const _config = {\n    denyUnknown: [],\n    httpErrorCode: 400,\n    schema: false,\n    nextOnError: false,\n    alternate: [],\n    ...config\n  };\n\n  return async (ctx, next) => {\n    let alternateSchema = {};\n    let alternateData = {};\n\n    if (_config.alternate.includes(\"query\")) {\n      alternateSchema = { query, ...alternateSchema };\n      alternateData = { query: { query: ctx.query }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"body\")) {\n      alternateSchema = { body, ...alternateSchema };\n      alternateData = { body: { body: ctx.request.body }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"params\")) {\n      alternateSchema = { params, ...alternateSchema };\n      alternateData = { params: { params: ctx.params }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"headers\")) {\n      alternateSchema = { headers, ...alternateSchema };\n      alternateData = { headers: { headers: ctx.headers }, ...alternateData };\n    }\n\n    try {\n      if (_config.schema === true && schema) {\n        await handleErrorWithSource(\n          \"schema\",\n          schema.validateAsync({\n            query: ctx.query,\n            body: ctx.request.body,\n            params: ctx.params,\n            headers: ctx.headers\n          })\n        );\n      } else {\n        if (query && !_config.alternate.includes(\"query\")) {\n          await handleErrorWithSource(\n            \"query\",\n            Joi.object(query)\n              .unknown(!_config.denyUnknown.includes(\"query\"))\n              .validateAsync(ctx.query)\n          );\n        }\n\n        if (params && !_config.alternate.includes(\"params\")) {\n          await handleErrorWithSource(\n            \"params\",\n            Joi.object(params).validateAsync(ctx.params)\n          );\n        }\n\n        if (body && !_config.alternate.includes(\"body\")) {\n          await handleErrorWithSource(\n            \"body\",\n            Joi.object(body)\n              .unknown(!_config.denyUnknown.includes(\"body\"))\n              .validateAsync(ctx.request.body)\n          );\n        }\n\n        if (headers && !_config.alternate.includes(\"headers\")) {\n          const headersLowered = Object.keys(headers).reduce(\n            (destination, key) => {\n              destination[key.toLowerCase()] = headers[key];\n              return destination;\n            },\n            {}\n          );\n          await handleErrorWithSource(\n            \"headers\",\n            Joi.object(headersLowered)\n              .unknown(!_config.denyUnknown.includes(\"headers\"))\n              .validateAsync(ctx.headers)\n          );\n        }\n\n        // validation of alternates\n        if (_config.alternate.length) {\n          await alternativeValidation(\n            _config.alternate,\n            alternateSchema,\n            alternateData,\n            _config\n          );\n        }\n      }\n\n      await next();\n      // Output validator\n      if (inputs[ctx.status]) {\n        await handleErrorWithSource(\n          \"output\",\n          Joi.object(inputs[ctx.status]).validateAsync(ctx.body)\n        );\n      }\n    } catch (error) {\n      if (_config.nextOnError) {\n        ctx.state.routeValidationError = error;\n        if (error.source !== \"output\") await next();\n      } else {\n        ctx.throw(_config.httpErrorCode, error);\n      }\n    }\n  };\n};\n"],"file":"index.js"}