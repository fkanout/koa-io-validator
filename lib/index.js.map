{"version":3,"sources":["../src/index.js"],"names":["alternativeValidation","alternate","schema","values","config","errorMsg","_original","details","v","handleErrorWithSource","Joi","alternatives","try","validateAsync","allowUnknown","denyUnknown","includes","err","message","error","Error","trim","name","source","fn","inputs","query","params","body","headers","undefined","Object","prototype","toString","call","Array","isArray","_config","httpErrorCode","nextOnError","ctx","next","alternateSchema","alternateData","request","object","unknown","headersLowered","keys","reduce","destination","key","toLowerCase","length","status","state","routeValidationError","throw"],"mappings":"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","sourcesContent":["import Joi from \"@hapi/joi\";\nexport { default as Joi } from \"@hapi/joi\";\n\nconst alternativeValidation = async (alternate, schema, values, config) => {\n  let errorMsg = \"\";\n  let _original = {};\n  let details = [];\n\n  for (const v in values) {\n    try {\n      await handleErrorWithSource(\n        alternate,\n        Joi.alternatives()\n          .try({\n            ...schema\n          })\n          .validateAsync(values[v], {\n            allowUnknown: !config.denyUnknown.includes(v)\n          })\n      );\n      return; // returning after first validation succeed\n    } catch (err) {\n      errorMsg += `${err.message}; `;\n      _original[v] = err._original[v];\n      details = [...details, ...err.details];\n    }\n  }\n\n  const error = new Error(errorMsg.trim());\n  error.name = \"ValidationError\";\n  error.source = alternate;\n  error.details = details;\n  error._original = _original;\n\n  throw error;\n};\n\nconst handleErrorWithSource = async (source, fn) => {\n  try {\n    await fn;\n  } catch (error) {\n    error.source = source;\n    throw error;\n  }\n};\nexport default inputs => {\n  const { query, params, body, headers, config } = inputs;\n\n  if (\n    config !== undefined &&\n    Object.prototype.toString.call(config) !== \"[object Object]\"\n  ) {\n    throw { message: `Route config, expecting config to be an Object` };\n  }\n\n  if (config && config.alternate && !Array.isArray(config.alternate)) {\n    throw { message: `Config's alternate option should be an array` };\n  }\n\n  if (config && config.denyUnknown && !Array.isArray(config.denyUnknown)) {\n    throw { message: `Config's denyUnknown option should be an array` };\n  }\n\n  const _config = {\n    denyUnknown: [],\n    httpErrorCode: 400,\n    nextOnError: false,\n    alternate: [],\n    ...config\n  };\n\n  return async (ctx, next) => {\n    let alternateSchema = {};\n    let alternateData = {};\n\n    if (_config.alternate.includes(\"query\")) {\n      alternateSchema = { query, ...alternateSchema };\n      alternateData = { query: { query: ctx.query }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"body\")) {\n      alternateSchema = { body, ...alternateSchema };\n      alternateData = { body: { body: ctx.request.body }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"params\")) {\n      alternateSchema = { params, ...alternateSchema };\n      alternateData = { params: { params: ctx.params }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"headers\")) {\n      alternateSchema = { headers, ...alternateSchema };\n      alternateData = { headers: { headers: ctx.headers }, ...alternateData };\n    }\n\n    try {\n      if (query && !_config.alternate.includes(\"query\")) {\n        await handleErrorWithSource(\n          \"query\",\n          Joi.object(query)\n            .unknown(!_config.denyUnknown.includes(\"query\"))\n            .validateAsync(ctx.query)\n        );\n      }\n\n      if (params && !_config.alternate.includes(\"params\")) {\n        await handleErrorWithSource(\n          \"params\",\n          Joi.object(params).validateAsync(ctx.params)\n        );\n      }\n\n      if (body && !_config.alternate.includes(\"body\")) {\n        await handleErrorWithSource(\n          \"body\",\n          Joi.object(body)\n            .unknown(!_config.denyUnknown.includes(\"body\"))\n            .validateAsync(ctx.request.body)\n        );\n      }\n\n      if (headers && !_config.alternate.includes(\"headers\")) {\n        const headersLowered = Object.keys(headers).reduce(\n          (destination, key) => {\n            destination[key.toLowerCase()] = headers[key];\n            return destination;\n          },\n          {}\n        );\n        await handleErrorWithSource(\n          \"headers\",\n          Joi.object(headersLowered)\n            .unknown(!_config.denyUnknown.includes(\"headers\"))\n            .validateAsync(ctx.headers)\n        );\n      }\n\n      // validation of alternates\n      if (_config.alternate.length) {\n        await alternativeValidation(\n          _config.alternate,\n          alternateSchema,\n          alternateData,\n          _config\n        );\n      }\n\n      await next();\n      // Output validator\n      if (inputs[ctx.status]) {\n        await handleErrorWithSource(\n          \"output\",\n          Joi.object(inputs[ctx.status]).validateAsync(ctx.body)\n        );\n      }\n    } catch (error) {\n      if (_config.nextOnError) {\n        ctx.state.routeValidationError = error;\n        if (error.source !== \"output\") await next();\n      } else {\n        ctx.throw(_config.httpErrorCode, error);\n      }\n    }\n  };\n};\n"],"file":"index.js"}