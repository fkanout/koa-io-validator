{"version":3,"sources":["../src/index.js"],"names":["inputs","ctx","next","query","params","body","headers","Joi","object","validateAsync","request","headersLowered","Object","keys","reduce","destination","key","toLowerCase","unknown","status"],"mappings":";;;;;;;AAAA;;;;eACe,kBAAAA,MAAM,EAAI;AACvB,SAAO,iBAAOC,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEKC,YAAAA,KAFL,GAEsCH,MAFtC,CAEKG,KAFL,EAEYC,MAFZ,GAEsCJ,MAFtC,CAEYI,MAFZ,EAEoBC,IAFpB,GAEsCL,MAFtC,CAEoBK,IAFpB,EAE0BC,OAF1B,GAEsCN,MAFtC,CAE0BM,OAF1B;;AAAA,iBAGCH,KAHD;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAIKI,gBAAIC,MAAJ,CAAWL,KAAX,EAAkBM,aAAlB,CAAgCR,GAAG,CAACE,KAApC,CAJL;;AAAA;AAAA,iBAMCC,MAND;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAOKG,gBAAIC,MAAJ,CAAWJ,MAAX,EAAmBK,aAAnB,CAAiCR,GAAG,CAACG,MAArC,CAPL;;AAAA;AAAA,iBASCC,IATD;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAUKE,gBAAIC,MAAJ,CAAWH,IAAX,EAAiBI,aAAjB,CAA+BR,GAAG,CAACS,OAAJ,CAAYL,IAA3C,CAVL;;AAAA;AAAA,iBAYCC,OAZD;AAAA;AAAA;AAAA;;AAaD;AACMK,YAAAA,cAdL,GAcsBC,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqBQ,MAArB,CAA4B,UAACC,WAAD,EAAcC,GAAd,EAAsB;AACvED,cAAAA,WAAW,CAACC,GAAG,CAACC,WAAJ,EAAD,CAAX,GAAiCX,OAAO,CAACU,GAAD,CAAxC;AACA,qBAAOD,WAAP;AACD,aAHsB,EAGpB,EAHoB,CAdtB;AAAA;AAAA,4CAkBKR,gBAAIC,MAAJ,CAAWG,cAAX,EACHO,OADG,CACK,IADL,EACW;AADX,aAEHT,aAFG,CAEWR,GAAG,CAACK,OAFf,CAlBL;;AAAA;AAAA;AAAA,4CAsBGJ,IAAI,EAtBP;;AAAA;AAAA,iBAwBCF,MAAM,CAACC,GAAG,CAACkB,MAAL,CAxBP;AAAA;AAAA;AAAA;;AAAA;AAAA,4CAyBKZ,gBAAIC,MAAJ,CAAWR,MAAM,CAACC,GAAG,CAACkB,MAAL,CAAjB,EAA+BV,aAA/B,CAA6CR,GAAG,CAACI,IAAjD,CAzBL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4BHJ,YAAAA,GAAG,SAAH,CAAU,GAAV;;AA5BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA+BD,C","sourcesContent":["import Joi from \"@hapi/joi\";\nexport default inputs => {\n  return async (ctx, next) => {\n    try {\n      const { query, params, body, headers } = inputs;\n      if (query) {\n        await Joi.object(query).validateAsync(ctx.query);\n      }\n      if (params) {\n        await Joi.object(params).validateAsync(ctx.params);\n      }\n      if (body) {\n        await Joi.object(body).validateAsync(ctx.request.body);\n      }\n      if (headers) {\n        // the framework make the headers entries lowercase-ed, so Joi schema should lowercase as well to match.\n        const headersLowered = Object.keys(headers).reduce((destination, key) => {\n          destination[key.toLowerCase()] = headers[key];\n          return destination;\n        }, {});\n        await Joi.object(headersLowered)\n          .unknown(true) // Allow unchecked headers entries to be sent.\n          .validateAsync(ctx.headers);\n      }\n      await next();\n      // Output validator\n      if (inputs[ctx.status]) {\n        await Joi.object(inputs[ctx.status]).validateAsync(ctx.body);\n      }\n    } catch (error) {\n      ctx.throw(400, error);\n    }\n  };\n};\n"],"file":"index.js"}