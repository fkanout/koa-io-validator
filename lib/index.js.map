{"version":3,"sources":["../src/index.js"],"names":["inputs","ctx","next","query","params","body","headers","Joi","object","validateAsync","request","headersLowered","Object","keys","reduce","destination","key","toLowerCase","unknown","status","error","throw"],"mappings":";;;;;;;;;AAAA;;eACeA,MAAM,IAAI;AACvB,SAAO,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AAC1B,QAAI;AACF,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,IAAjB;AAAuBC,QAAAA;AAAvB,UAAmCN,MAAzC;;AACA,UAAIG,KAAJ,EAAW;AACT,cAAMI,aAAIC,MAAJ,CAAWL,KAAX,EAAkBM,aAAlB,CAAgCR,GAAG,CAACE,KAApC,CAAN;AACD;;AACD,UAAIC,MAAJ,EAAY;AACV,cAAMG,aAAIC,MAAJ,CAAWJ,MAAX,EAAmBK,aAAnB,CAAiCR,GAAG,CAACG,MAArC,CAAN;AACD;;AACD,UAAIC,IAAJ,EAAU;AACR,cAAME,aAAIC,MAAJ,CAAWH,IAAX,EAAiBI,aAAjB,CAA+BR,GAAG,CAACS,OAAJ,CAAYL,IAA3C,CAAN;AACD;;AACD,UAAIC,OAAJ,EAAa;AACX;AACA,cAAMK,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqBQ,MAArB,CAA4B,CAACC,WAAD,EAAcC,GAAd,KAAsB;AACvED,UAAAA,WAAW,CAACC,GAAG,CAACC,WAAJ,EAAD,CAAX,GAAiCX,OAAO,CAACU,GAAD,CAAxC;AACA,iBAAOD,WAAP;AACD,SAHsB,EAGpB,EAHoB,CAAvB;AAIA,cAAMR,aAAIC,MAAJ,CAAWG,cAAX,EACHO,OADG,CACK,IADL,EACW;AADX,SAEHT,aAFG,CAEWR,GAAG,CAACK,OAFf,CAAN;AAGD;;AACD,YAAMJ,IAAI,EAAV,CArBE,CAsBF;;AACA,UAAIF,MAAM,CAACC,GAAG,CAACkB,MAAL,CAAV,EAAwB;AACtB,cAAMZ,aAAIC,MAAJ,CAAWR,MAAM,CAACC,GAAG,CAACkB,MAAL,CAAjB,EAA+BV,aAA/B,CAA6CR,GAAG,CAACI,IAAjD,CAAN;AACD;AACF,KA1BD,CA0BE,OAAOe,KAAP,EAAc;AACd;AACAnB,MAAAA,GAAG,CAACoB,KAAJ,CAAU,GAAV,EAAeD,KAAf;AACD;AACF,GA/BD;AAgCD,C","sourcesContent":["import Joi from \"@hapi/joi\";\nexport default inputs => {\n  return async (ctx, next) => {\n    try {\n      const { query, params, body, headers } = inputs;\n      if (query) {\n        await Joi.object(query).validateAsync(ctx.query);\n      }\n      if (params) {\n        await Joi.object(params).validateAsync(ctx.params);\n      }\n      if (body) {\n        await Joi.object(body).validateAsync(ctx.request.body);\n      }\n      if (headers) {\n        // the framework make the headers entries lowercase-ed, so Joi schema should lowercase-ed as well to match.\n        const headersLowered = Object.keys(headers).reduce((destination, key) => {\n          destination[key.toLowerCase()] = headers[key];\n          return destination;\n        }, {});\n        await Joi.object(headersLowered)\n          .unknown(true) // Allow unchecked headers entries to be sent.\n          .validateAsync(ctx.headers);\n      }\n      await next();\n      // Output validator\n      if (inputs[ctx.status]) {\n        await Joi.object(inputs[ctx.status]).validateAsync(ctx.body);\n      }\n    } catch (error) {\n      // console.log(error);\n      ctx.throw(400, error);\n    }\n  };\n};\n"],"file":"index.js"}