{"version":3,"sources":["../src/index.js"],"names":["alternativeValidation","alternate","schema","values","error","v","handleErrorWithSource","Joi","alternatives","try","validateAsync","allowUnknown","err","source","fn","inputs","query","params","body","headers","config","undefined","Object","prototype","toString","call","message","_config","denyUnknown","httpErrorCode","nextOnError","ctx","next","alternateSchema","alternateData","includes","request","object","unknown","headersLowered","keys","reduce","destination","key","toLowerCase","length","status","state","routeValidationError","throw"],"mappings":"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","sourcesContent":["import Joi from \"@hapi/joi\";\nexport { default as Joi } from \"@hapi/joi\";\n\nconst alternativeValidation = async (alternate, schema, values) => {\n  let error;\n  for (const v in values) {\n    try {\n      await handleErrorWithSource(\n        alternate,\n        Joi.alternatives()\n          .try({\n            ...schema\n          })\n          .validateAsync(values[v], {\n            allowUnknown: true\n          })\n      );\n      return; // returning after first validation succeed\n    } catch (err) {\n      error = err;\n    }\n  }\n  // throwing last error\n  // TODO: should we fabricate our custom error indicating about failing alternatives and combining all errors messages?\n  throw error;\n};\n\nconst handleErrorWithSource = async (source, fn) => {\n  try {\n    await fn;\n  } catch (error) {\n    error.source = source;\n    throw error;\n  }\n};\nexport default inputs => {\n  const { query, params, body, headers, config } = inputs;\n\n  if (\n    config !== undefined &&\n    Object.prototype.toString.call(config) !== \"[object Object]\"\n  ) {\n    throw { message: `Route config, expecting config to be an Object` };\n  }\n\n  const _config = {\n    denyUnknown: [],\n    httpErrorCode: 400,\n    nextOnError: false,\n    alternate: [],\n    ...config\n  };\n\n  return async (ctx, next) => {\n    let alternateSchema = {};\n    let alternateData = {};\n\n    if (_config.alternate.includes(\"query\")) {\n      alternateSchema = { query, ...alternateSchema };\n      alternateData = { query: { query: ctx.query }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"body\")) {\n      alternateSchema = { body, ...alternateSchema };\n      alternateData = { body: { body: ctx.request.body }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"params\")) {\n      alternateSchema = { params, ...alternateSchema };\n      alternateData = { params: { params: ctx.params }, ...alternateData };\n    }\n\n    if (_config.alternate.includes(\"headers\")) {\n      alternateSchema = { headers, ...alternateSchema };\n      alternateData = { headers: { headers: ctx.headers }, ...alternateData };\n    }\n\n    try {\n      if (query && !_config.alternate.includes(\"query\")) {\n        await handleErrorWithSource(\n          \"query\",\n          Joi.object(query)\n            .unknown(!_config.denyUnknown.includes(\"query\"))\n            .validateAsync(ctx.query)\n        );\n      }\n\n      if (params && !_config.alternate.includes(\"params\")) {\n        await handleErrorWithSource(\n          \"params\",\n          Joi.object(params).validateAsync(ctx.params)\n        );\n      }\n\n      if (body && !_config.alternate.includes(\"body\")) {\n        await handleErrorWithSource(\n          \"body\",\n          Joi.object(body)\n            .unknown(!_config.denyUnknown.includes(\"body\"))\n            .validateAsync(ctx.request.body)\n        );\n      }\n\n      if (headers && !_config.alternate.includes(\"headers\")) {\n        const headersLowered = Object.keys(headers).reduce(\n          (destination, key) => {\n            destination[key.toLowerCase()] = headers[key];\n            return destination;\n          },\n          {}\n        );\n        await handleErrorWithSource(\n          \"headers\",\n          Joi.object(headersLowered)\n            .unknown(!_config.denyUnknown.includes(\"headers\"))\n            .validateAsync(ctx.headers)\n        );\n      }\n\n      // validation of alternates\n      if (_config.alternate.length) {\n        await alternativeValidation(\n          _config.alternate,\n          alternateSchema,\n          alternateData\n        );\n      }\n\n      await next();\n      // Output validator\n      if (inputs[ctx.status]) {\n        await handleErrorWithSource(\n          \"output\",\n          Joi.object(inputs[ctx.status]).validateAsync(ctx.body)\n        );\n      }\n    } catch (error) {\n      if (_config.nextOnError) {\n        ctx.state.routeValidationError = error;\n        if (error.source !== \"output\") await next();\n      } else {\n        ctx.throw(_config.httpErrorCode, error);\n      }\n    }\n  };\n};\n"],"file":"index.js"}